esphome:
  name: rainfall_device

i2c:
  sda: GPIO21
  scl: GPIO22

custom_component:
  - lambda: |-
      auto rainfall_sensor = new DFRobotRainfallSensor(i2c::I2CDevice(*this), 0x1D);
      App.register_component(rainfall_sensor);
      return {rainfall_sensor};

sensor:
  - platform: custom
    lambda: |-
      auto rainfall_sensor = new DFRobotRainfallSensor(i2c::I2CDevice(*this), 0x1D);
      App.register_component(rainfall_sensor);
      return {rainfall_sensor};
    sensors:
      - name: "Rainfall Sensor"
        unit_of_measurement: "mm"
        device_class: "rainfall"
        accuracy_decimals: 2
        id: rainfall_sensor_id

      - name: "Rainfall within 1 hour"
        unit_of_measurement: "mm"
        device_class: "rainfall"
        accuracy_decimals: 2
        lambda: |-
          auto sensor = id(rainfall_sensor_id);
          return sensor->getRainfall(1);
        update_interval: 60s

      - name: "Raw Data"
        unit_of_measurement: "count"
        device_class: "none"
        accuracy_decimals: 0
        lambda: |-
          auto sensor = id(rainfall_sensor_id);
          return sensor->getRawData();
        update_interval: 60s

      - name: "Sensor Working Time"
        unit_of_measurement: "h"
        device_class: "duration"
        accuracy_decimals: 2
        lambda: |-
          auto sensor = id(rainfall_sensor_id);
          return sensor->getSensorWorkingTime();
        update_interval: 60s